{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAClCC,EAAW,EAIf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUC,UAEpBG,EAAO,CAAEK,SAAAT,EAAUC,S,GAEpBA,E,IAXPN,EAAOe,iBAAiB,UAexB,SAAkBC,GAChBA,EAAEC,iBACF,IAAgCC,EAelC,SAAqBF,GACnB,IAAMV,EAAQa,OAAOH,EAAEI,OAAO,GAAGC,OAC3BC,EAAOH,OAAOH,EAAEI,OAAO,GAAGC,OAC1BE,EAASJ,OAAOH,EAAEI,OAAO,GAAGC,OAIlC,OAFAG,QAAQC,IAAInB,EAAOgB,EAAMC,GAElB,CAAEjB,QAAOgB,OAAMC,S,CAtBUG,CAAYV,GAApCW,EAAwBT,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAErB,IAAKpB,EAAW,EAAGA,EAAWoB,EAAQpB,IAAY,CAChD,IAAMyB,EAAuBD,EAAQL,EAAOnB,EAC5CqB,QAAQC,IAAIG,GACZxB,EAAcD,EAAUyB,GACrBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARhB,SAAUR,EAAKwB,EAALxB,MACjBkB,QAAQC,IAAI,uBAAwCO,OAAfD,EAAS,QAAYC,OAAN1B,EAAM,M,IAE3D2B,OAAM,SAAAH,G,IAAGI,EAAQJ,EAARhB,SAAUR,EAAKwB,EAALxB,MAClBkB,QAAQC,IAAI,sBAAqCO,OAAfE,EAAS,QAAYF,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nlet position = 1;\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = getFormData(e);\n\n  for (position = 0; position < amount; position++) {\n    const promiseComputedDelay = delay + step * position;\n    console.log(promiseComputedDelay);\n    createPromise(position, promiseComputedDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction getFormData(e) {\n  const delay = Number(e.target[0].value);\n  const step = Number(e.target[1].value);\n  const amount = Number(e.target[2].value);\n\n  console.log(delay, step, amount);\n\n  return { delay, step, amount };\n}\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$createPromise","position1","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","addEventListener","e","preventDefault","ref","Number","target","value","step","amount","console","log","$ce04d3a99e08e73b$var$getFormData","delay1","promiseComputedDelay","then","param","position2","concat","catch","position3"],"version":3,"file":"03-promises.9ccde3eb.js.map"}